@startuml
autonumber 1 1 "<b>[00]"
title "FHIR-VZD Authentisierung für Versicherte"


box Fachanwendung #WhiteSmoke
    participant VClient as "Client Versicherter"
    participant FDienst as "Fachdienst"
end box

box VZD-FHIR-Directory #WhiteSmoke
    participant "OAuth-Server" as VzdOAuth
    participant "Auth-Service" as VzdAuth
    participant fp as "FHIR-Proxy"
end box



VClient-> VClient: prüfe ob  gültiges ""search-access-token""\nvom FHIR-Directory Auth-Service vorliegt


alt kein gültiges search-access-token vorhanden
   VClient-> FDienst: Anfrage search-access-token

note left: Vor der Anfrage\nvom search-access-token\nmuss der Client authentisiert sein

   
   FDienst -> FDienst: client_id und client_secret\nz.B. aus config File lesen
   FDienst ->VzdOAuth++: POST /token (client_id, client_secret)
   VzdOAuth->VzdOAuth: prüfe client_id, client_secret
   VzdOAuth-->FDienst--: ""service-authz-token""

   FDienst->VzdAuth++: GET /service-authenticate \n Authorization:   Bearer {service-authz-token}

   VzdAuth->VzdAuth: Prüfe service-authz-token

   VzdAuth->VzdAuth: Erzeuge search-access-token
   VzdAuth-->FDienst: HTTP 200 OK\n{\n "access_token"="search-access-token",\n  "token_type":"bearer",\n "expires_in":86400\n}

   FDienst->FDienst: cache ""search-access-token""

   FDienst-->VClient: ""search-access-token""
end

== ...Suche durch Versicherte im FHIR VZD... ==

VClient -> fp: GET /patient/search?... \nAuthorization: Bearer search-access-token
activate fp
fp -> fp: prüfe search-access-token
fp -> fp: suche
alt search-access-token ist gültig
   fp --> VClient : HTTP 200 OK (Result Body json)
 else search-access-token ist ungültig
   fp --> VClient : HTTP 401
   deactivate fp
end

@enduml
