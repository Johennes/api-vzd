@startuml
autonumber 1 1 "<b>[00]"
title "FHIR-VZD Authentisierung für Versicherte"


box Fachanwendung #WhiteSmoke
    participant VClient as "Frontend Versicherter"
    participant FDienst as "Fachdienst"
end box

box VZD-FHIR-Directory #WhiteSmoke
    participant "OAuth-Server" as VzdOAuth
    participant "Auth-Service" as VzdAuth
    participant fp as "FHIR-Proxy"
    participant fd as "FHIR-Directory"
end box


group Asynchron

FDienst -> FDienst: client_id und client_secret\nabrufen
FDienst ->VzdOAuth++: POST /token (client_id, client_secret)
VzdOAuth->VzdOAuth: prüfe client_id, client_secret
VzdOAuth-->FDienst--: ""service-authz-token""

FDienst->VzdAuth++: POST /service-authenticate \n grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer,\n assertion={service-authz-token}

note left
RFC7523
Später noch scopes, z.B
scope=search
end note

VzdAuth->VzdAuth: Prüfe service-authz-token

VzdAuth->VzdAuth: Erzeuge search-access-token
VzdAuth-->FDienst: HTTP 200 OK\n{\n "access_token"="search-access-token",\n  "token_type":"bearer",\n "expires_in":86400\n}

FDienst->FDienst: merke ""search-access-token""


end

VClient-> VClient: prüfe ob  gültiges ""search-access-token""\nvom FHIR-Directory Auth-Service vorliegt


alt kein gültiges search-ACCESS_TOKEN vorhanden
   VClient-> FDienst: Anfrage search-access-token

   FDienst->FDienst: Prüfe Benutzer Authentisierung
   FDienst->FDienst: asynchron gemerkten\n""search-access-token"" abhrufen

   FDienst-->VClient: ""search-access-token""
end

== ...Suche durch Versicherte im FHIR VZD... ==

VClient -> fp: GET /fdv/search?... \nAuthorization: Bearer search-access-token
activate fp
fp -> fp: prüfe search-access-token

alt search-ACCESS_TOKEN ist gültig
   fp -> fd: GET /?...
   activate fd
   fd --> fp: HTTP 200 OK\n(Result Body json)
   deactivate fd
   fp --> VClient : HTTP 200 OK (Result Body json)
 else search-accesstoken is invalid
   fp --> VClient : HTTP 401
   deactivate fp
end

@enduml
